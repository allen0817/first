<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/6/26
 * Time: 9:57
 */

namespace app\components;


use yii\httpclient\Client;
use yii\helpers\ArrayHelper;
use Yii;

/**
 * Class IbmStorage
 * @package app\components
 * 存储设备curl 要支持 ssl 因为一般都curl 都是默认用nss  所以需要重新编译 --without-nss  --with--ssl
 * 查看 curl -V 查看是那个版本
 */

class  IbmStorage extends BaseCurl{
    /**登录
     * @return mixed
     */

    private  $_client;


    protected function login()
    {
        // TODO: Implement login() method.
    }

    /**登出
     * @return mixed
     */
    protected function logout()
    {
        // TODO: Implement logout() method.
    }

    /**获取数据
     * @return mixed
     */
    protected function getData()
    {
        // TODO: Implement getData() method.
    }

    /**curl_exec
     * @param $url
     * @return mixed
     */
    protected function exec($url)
    {
        // TODO: Implement exec() method.
    }

    public function getClient()
    {
        //return parent::getClient(); // TODO: Change the autogenerated stub
        return $this->createClient();
    }

    protected function createClient(){
        if(!$this->_client){
            $this->_client = new Client();
            $this->_client->createRequest()->setFormat('xml');
        }
        return $this->_client;
    }

    public  function send($url,$params=[],$options=[],$method = 'POST'){
        $options = ArrayHelper::merge($options,[
            'sslVerifyPeer' => false,
            'sslVerifyPeerName' => false,
            'CURLOPT_CONNECTTIMEOUT' => 5, // connection timeout
            'CURLOPT_TIMEOUT' => 10, // data receiving timeout
        ]);
        //$client = new Client();
        $request = $this->_client->createRequest()
            ->setMethod($method)
//            ->addHeaders([
//                'Strict-Transport-Security' => 'max-age=778000; includeSubDomains',
//                'Transfer-Encoding' => 'chunked',
//                'Vary' => 'Accept-Encoding',
//                'X-Content-Type-Options' => 'nosniff',
//                'X-FRAME-OPTIONS' => 'SAMEORIGIN',
//                'Upgrade-Insecure-Requests' => 1,
//            ])
                ->addHeaders($options)
            ->setUrl($url)
            //->setOptions($options)
            ->setCookies([
                $this->cookie
            ]);
        if($params) $request = $request->setData($params);

        try{
            $response = $request->send();
            if ($response->isOk) {
                return $response;
            }
        }catch (\Exception $exception){
            print_r($exception->getMessage());
        }


    }


}